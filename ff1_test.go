package ubiq

import (
	"testing"
)

func testFF1(t *testing.T, K, T []byte, PT, CT string, r int) {
	if len(PT) != len(CT) {
		t.FailNow()
	}

	ff1, err := NewFF1(K, T, 0, 0, r)
	if err != nil {
		t.Fatal(err)
	}

	out, err := ff1.Encrypt(PT, nil)
	if err != nil {
		t.Fatal(err)
	}

	if out != CT {
		t.FailNow()
	}

	out, err = ff1.Decrypt(CT, nil)
	if err != nil {
		t.Fatal(err)
	}

	if out != PT {
		t.FailNow()
	}
}

func TestFF1NIST1(t *testing.T) {
	testFF1(t,
		[]byte{
			0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6,
			0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c,
		},
		[]byte{},
		"0123456789",
		"2433477484",
		10)
}

func TestFF1NIST2(t *testing.T) {
	testFF1(t,
		[]byte{
			0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6,
			0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c,
		},
		[]byte{
			0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33, 0x32,
			0x31, 0x30,
		},
		"0123456789",
		"6124200773",
		10)
}

func TestFF1NIST3(t *testing.T) {
	testFF1(t,
		[]byte{
			0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6,
			0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c,
		},
		[]byte{
			0x37, 0x37, 0x37, 0x37, 0x70, 0x71, 0x72, 0x73,
			0x37, 0x37, 0x37,
		},
		"0123456789abcdefghi",
		"a9tv40mll9kdu509eum",
		36)
}

func TestFF1NIST4(t *testing.T) {
	testFF1(t,
		[]byte{
			0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6,
			0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c,
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
		},
		[]byte{},
		"0123456789",
		"2830668132",
		10)
}

func TestFF1NIST5(t *testing.T) {
	testFF1(t,
		[]byte{
			0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6,
			0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c,
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
		},
		[]byte{
			0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33, 0x32,
			0x31, 0x30,
		},
		"0123456789",
		"2496655549",
		10)
}

func TestFF1NIST6(t *testing.T) {
	testFF1(t,
		[]byte{
			0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6,
			0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c,
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
		},
		[]byte{
			0x37, 0x37, 0x37, 0x37, 0x70, 0x71, 0x72, 0x73,
			0x37, 0x37, 0x37,
		},
		"0123456789abcdefghi",
		"xbj3kv35jrawxv32ysr",
		36)
}

func TestFF1NIST7(t *testing.T) {
	testFF1(t,
		[]byte{
			0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6,
			0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c,
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
		},
		[]byte{},
		"0123456789",
		"6657667009",
		10)
}

func TestFF1NIST8(t *testing.T) {
	testFF1(t,
		[]byte{
			0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6,
			0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c,
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
		},
		[]byte{
			0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33, 0x32,
			0x31, 0x30,
		},
		"0123456789",
		"1001623463",
		10)
}

func TestFF1NIST9(t *testing.T) {
	testFF1(t,
		[]byte{
			0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6,
			0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c,
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
		},
		[]byte{
			0x37, 0x37, 0x37, 0x37, 0x70, 0x71, 0x72, 0x73,
			0x37, 0x37, 0x37,
		},
		"0123456789abcdefghi",
		"xs8a0azh2avyalyzuwd",
		36)
}

func TestFF1Base2(t *testing.T) {
	testFF1(t,
		[]byte{
			0xf4, 0xa1, 0x16, 0xd6, 0xee, 0x40, 0x6a, 0x53,
			0xa5, 0x6c, 0xbe, 0x0f, 0x4a, 0xa7, 0xb1, 0x00,
			0x1c, 0xdc, 0x0a, 0x55, 0xca, 0xc9, 0x63, 0xcf,
			0x5a, 0xce, 0x39, 0x04, 0x88, 0xb3, 0x47, 0x7a,
		},
		[]byte{
			0xfd, 0x7f, 0x4b, 0x99, 0x45, 0xa3, 0xc5, 0x35,
			0xad, 0xb4, 0x72, 0x00, 0x27, 0x11, 0x6c, 0xa0,
			0xf4, 0x98, 0x7d, 0x7f, 0x3f, 0xdb, 0xa9, 0xbb,
			0xc4, 0x0e, 0x75, 0x37, 0x5f, 0xea, 0xa6, 0x3c,
		},
		"00000101011011011101001001010011100111100011001",
		"10110101001110101101110000011000000011111100111",
		2)
}
